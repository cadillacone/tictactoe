{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","squares","map","square","i","key","Game","React","useState","Array","fill","history","setHistory","xIsNext","setxIsNext","stepNumber","setStepNumber","status","current","winner","calculateWinner","moves","step","move","desc","jumpTo","handleHistory","slice","length","concat","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"qNAIA,SAASA,EAAOC,GACd,OACE,4BAAQC,UAAU,SAASC,QAASF,EAAME,SACvCF,EAAMG,OAKb,SAASC,EAAMJ,GACb,OACE,yBAAKC,UAAU,SACZD,EAAMK,QAAQC,KAAI,SAACC,EAAQC,GAAT,OACjB,kBAACT,EAAD,CAAQU,IAAKD,EAAGL,MAAOI,EAAQL,QAAS,kBAAMF,EAAME,QAAQM,UAMpE,SAASE,EAAKV,GAAQ,IAAD,EACWW,IAAMC,SAAS,CAC3C,CACEP,QAASQ,MAAM,GAAGC,KAAK,SAHR,mBACZC,EADY,KACHC,EADG,OAMWL,IAAMC,UAAS,GAN1B,mBAMZK,EANY,KAMHC,EANG,OAOiBP,IAAMC,SAAS,GAPhC,mBAOZO,EAPY,KAOAC,EAPA,KAiCnB,IAEIC,EAFEC,EAAUP,EAAQI,GAClBI,EAASC,EAAgBF,EAAQjB,SAGrCgB,EADEE,EACO,WAAaA,EAEb,iBAAmBN,EAAU,IAAM,KAG9C,IAAMQ,EAAQV,EAAQT,KAAI,SAACoB,EAAMC,GAC/B,IAAMC,EAAOD,EAAO,UAAYA,EAAO,QACvC,OACE,4BAAQlB,IAAKkB,EAAMzB,QAAS,kBAjBhC,SAAgBwB,GACdN,EAAcM,GACdR,EAAWQ,EAAO,IAAM,GAeYG,CAAOF,KACtCC,MAKP,OACE,yBAAK3B,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,CAAOC,QAASiB,EAAQjB,QAASH,QAAS,SAAAM,GAAC,OA7CjD,SAAqBA,GACnB,IAAMsB,EAAgBf,EAAQgB,MAAM,EAAGZ,EAAa,GAE9Cd,EADUyB,EAAcA,EAAcE,OAAS,GAC7B3B,QAAQ0B,QAC5BP,EAAgBnB,IAAYA,EAAQG,KAGxCH,EAAQG,GAAKS,EAAU,IAAM,IAC7BD,EACEc,EAAcG,OAAO,CACnB,CACE5B,QAASA,MAIfe,EAAcU,EAAcE,QAC5Bd,GAAYD,IA6BuCiB,CAAY1B,OAE7D,yBAAKP,UAAU,aACb,2BAAIoB,GACJ,yBAAKpB,UAAU,gBACb,uCACCwB,KAWX,SAASD,EAAgBnB,GAWvB,IAVA,IAAM8B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA3B,EAAI,EAAGA,EAAI2B,EAAMH,OAAQxB,IAAK,CAAC,IAAD,cACnB2B,EAAM3B,GADa,GAC9B4B,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIjC,EAAQ+B,IAAM/B,EAAQ+B,KAAO/B,EAAQgC,IAAMhC,EAAQ+B,KAAO/B,EAAQiC,GACpE,OAAOjC,EAAQ+B,GAGnB,OAAO,KAnBTG,IAASC,OAAO,kBAAC9B,EAAD,MAAU+B,SAASC,eAAe,W","file":"static/js/main.79ba5dd9.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nfunction Board(props) {\n  return (\n    <div className=\"board\">\n      {props.squares.map((square, i) => (\n        <Square key={i} value={square} onClick={() => props.onClick(i)} />\n      ))}\n    </div>\n  );\n}\n\nfunction Game(props) {\n  const [history, setHistory] = React.useState([\n    {\n      squares: Array(9).fill(null),\n    },\n  ]);\n  const [xIsNext, setxIsNext] = React.useState(true);\n  const [stepNumber, setStepNumber] = React.useState(0);\n\n  function handleClick(i) {\n    const handleHistory = history.slice(0, stepNumber + 1);\n    const current = handleHistory[handleHistory.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = xIsNext ? 'X' : 'O';\n    setHistory(\n      handleHistory.concat([\n        {\n          squares: squares,\n        },\n      ])\n    );\n    setStepNumber(handleHistory.length);\n    setxIsNext(!xIsNext);\n  }\n\n  function jumpTo(step) {\n    setStepNumber(step);\n    setxIsNext(step % 2 === 0);\n  }\n\n  const current = history[stepNumber];\n  const winner = calculateWinner(current.squares);\n  let status;\n  if (winner) {\n    status = 'Winner: ' + winner;\n  } else {\n    status = 'Next player: ' + (xIsNext ? 'X' : 'O');\n  }\n\n  const moves = history.map((step, move) => {\n    const desc = move ? 'Move # ' + move : 'Start';\n    return (\n      <button key={move} onClick={() => jumpTo(move)}>\n        {desc}\n      </button>\n    );\n  });\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board squares={current.squares} onClick={i => handleClick(i)} />\n      </div>\n      <div className=\"game-info\">\n        <p>{status}</p>\n        <div className=\"game-history\">\n          <p>History:</p>\n          {moves}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}"],"sourceRoot":""}